{"ast":null,"code":"var _jsxFileName = \"/Users/MarcosCanchola/Desktop/web_projects/todo/src/components/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Checkbox, Icon, Input } from 'semantic-ui-react';\nimport './Todo.css';\n\nfunction TodoEngine() {\n  // Initialize our state variables\n  const [todo, setTodo] = useState(''); // const [loading, setLoading] = useState(false);\n\n  const [todos, getTodos] = useState([]); // const [todoDelete,removeTodo] = useState('');\n  // Save todo item\n\n  const saveTodo = e => {\n    e.preventDefault();\n    const savedItems = JSON.parse(window.localStorage.getItem('todo'));\n    let items = [];\n    console.log(todo);\n\n    if (e.target.value === '') {\n      if (savedItems === null) {\n        items = [{\n          id: Math.floor(Math.random(99999) * 232234),\n          todo,\n          completed: 'false'\n        }];\n      } else {\n        items = [{\n          id: Math.floor(Math.random(99999) * 2342342),\n          todo,\n          completed: 'false'\n        }, ...savedItems];\n      }\n    } else {\n      alert('Insert a task');\n    }\n\n    window.localStorage.setItem('todo', JSON.stringify(items));\n    setTodo(\"\");\n  };\n\n  function loadItems() {\n    const items = JSON.parse(window.localStorage.getItem('todo'));\n    getTodos(items);\n  }\n\n  function clearItems() {\n    window.localStorage.removeItem('todo');\n    getTodos([]);\n  }\n\n  function removeTodo(todo) {\n    const items = todos.filter(item => item.id !== todo.id);\n    window.localStorage.setItem('todo', JSON.stringify(items));\n    loadItems(todos);\n  }\n\n  function taskCompleted(todo) {\n    const items = todos.map((item, idx, arr) => {\n      if (item.id === todo.id) {\n        item.completed = 'true';\n      }\n\n      return item;\n    });\n    window.localStorage.setItem('todo', JSON.stringify(items));\n    loadItems(todos);\n    console.log('updated');\n  } //useEffect will load only once when component is mounted\n\n\n  useEffect(() => {\n    loadItems(todos);\n  }, [todo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: todo,\n    onChange: e => setTodo(e.target.value),\n    placeholder: \"Please insert a task...\",\n    style: {\n      width: '70%',\n      marginBottom: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    inverted: true,\n    color: \"blue\",\n    onClick: e => saveTodo(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    inverted: true,\n    color: \"red\",\n    onClick: () => clearItems(),\n    style: {\n      float: 'right',\n      marginBottom: '-3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Todo List\"), todos === null || todos.length === 0 ? /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 66\n    }\n  }, \"There are currently no items at the moment.\") : todos.map((item, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onClick: e => taskCompleted(item),\n    checked: item.completed === 'true' ? 'true' : '',\n    toggle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, item.todo), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, \"Completed: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 73\n    }\n  }, \" \", item.completed, \" \"), \" \"), /*#__PURE__*/React.createElement(Icon, {\n    name: \"trash\",\n    onClick: e => removeTodo(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 37\n    }\n  }))))));\n}\n\nexport default TodoEngine;","map":{"version":3,"sources":["/Users/MarcosCanchola/Desktop/web_projects/todo/src/components/Todo.js"],"names":["React","useState","useEffect","Button","Checkbox","Icon","Input","TodoEngine","todo","setTodo","todos","getTodos","saveTodo","e","preventDefault","savedItems","JSON","parse","window","localStorage","getItem","items","console","log","target","value","id","Math","floor","random","completed","alert","setItem","stringify","loadItems","clearItems","removeItem","removeTodo","filter","item","taskCompleted","map","idx","arr","width","marginBottom","float","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Button, Checkbox, Icon, Input} from 'semantic-ui-react';\n\nimport './Todo.css';\n\nfunction TodoEngine(){\n    // Initialize our state variables\n    const [todo, setTodo] = useState('');\n    // const [loading, setLoading] = useState(false);\n    const [todos, getTodos] = useState([]);\n    // const [todoDelete,removeTodo] = useState('');\n\n    // Save todo item\n    const saveTodo = (e)=>{\n        e.preventDefault();\n        const savedItems = JSON.parse(window.localStorage.getItem('todo'));\n        let items=[];\n        console.log(todo)\n        if(e.target.value === ''){\n            if(savedItems === null){\n                items = [\n                    {\n                        id:Math.floor(Math.random(99999)*232234),\n                        todo,\n                        completed:'false'\n                    }];\n            }else{\n                items = [\n                        {\n                            id:Math.floor(Math.random(99999)*2342342),\n                            todo,\n                            completed:'false'\n                        },\n                        ...savedItems,\n                    ];            \n            }\n        } else{\n            alert('Insert a task')\n        }\n\n        window.localStorage.setItem('todo', JSON.stringify(items));\n        setTodo(\"\");\n\n    }\n\n    function loadItems(){\n        const items = JSON.parse(window.localStorage.getItem('todo'));\n        getTodos(items);\n    }\n    \n    function clearItems(){\n        window.localStorage.removeItem('todo');\n        getTodos([]);\n    }\n\n    function removeTodo(todo){\n        const items = todos.filter(item => item.id !== todo.id );\n        window.localStorage.setItem('todo', JSON.stringify(items));\n        loadItems(todos)\n\n    }\n\n    function taskCompleted(todo){\n        const items = todos.map((item,idx,arr) => {\n            if(item.id === todo.id){\n                item.completed = 'true';\n            }\n            return item\n        });\n        window.localStorage.setItem('todo', JSON.stringify(items));\n        loadItems(todos)  \n        console.log('updated');     \n    }\n\n    //useEffect will load only once when component is mounted\n    useEffect(()=>{\n        loadItems(todos);\n    },[todo])\n    \n    return (\n        <div>\n            <form>                \n                <Input \n                    value={todo}\n                    onChange={(e)=> setTodo(e.target.value)}\n                    placeholder=\"Please insert a task...\"\n                    style={{width:'70%',marginBottom:'1%'}}\n                />\n                <Button \n                    inverted color=\"blue\" \n                    onClick={e => saveTodo(e)}>Save</Button>\n            </form>\n            \n            <div className=\"listContainer\">\n                <Button inverted color=\"red\" onClick={()=>clearItems()} style={{float:'right',marginBottom:'-3%'}}>Clear</Button>\n                <ul>\n                <h3>Todo List</h3>\n\n                    {\n                        (todos === null || todos.length === 0) ? <h5>There are currently no items at the moment.</h5>  : \n                            todos.map((item,idx)=>\n                                <li key={idx} className=\"list\">\n                                    <Checkbox \n                                        onClick={(e)=> taskCompleted(item)} \n                                        checked={ (item.completed === 'true' ) ? 'true': '' }\n                                        toggle\n                                        />\n                                    <p>{item.todo}</p>     \n                                    <p className=\"completed\">Completed: <b> {item.completed} </b> </p>\n                                    <Icon name='trash' onClick={(e) => removeTodo(item)}/>\n                                </li>\n                            ) \n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoEngine;"]},"metadata":{},"sourceType":"module"}