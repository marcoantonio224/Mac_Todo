{"ast":null,"code":"var _jsxFileName = \"/Users/MarcosCanchola/Desktop/web_projects/Mac_Todo/src/components/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Checkbox, Icon, Input, Loader } from 'semantic-ui-react';\nimport validator from 'validator';\nimport moment from 'moment';\nimport './Todo.css';\nconst date = moment().format(\"MMMM Do YYYY\");\nconst time = moment().format(\"h:mm:ss a\");\n\nfunction TodoEngine() {\n  // Initialize our state variables\n  const [todo, setTodo] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [realTime, setTime] = useState(time);\n  const [todos, getTodos] = useState([]);\n  const [search, setSearch] = useState('');\n  const [notification, setNotification] = useState('');\n  const savedItems = JSON.parse(window.localStorage.getItem('todo')); // Save todo item\n\n  const saveTodo = e => {\n    e.preventDefault(); // Validate to see if todo isnt an empty task\n\n    if (validator.isAscii(todo.trim())) {\n      let items = [];\n\n      if (savedItems === null) {\n        items = [{\n          id: Math.floor(Math.random(99999) * 232234),\n          todo,\n          completed: 'false',\n          date: date,\n          time: time\n        }];\n      } else {\n        items = [{\n          id: Math.floor(Math.random(99999) * 2342342),\n          todo,\n          completed: 'false',\n          date: date,\n          time: time\n        }, ...savedItems];\n      } // Save items\n\n\n      window.localStorage.setItem('todo', JSON.stringify(items));\n      setTodo(\"\");\n      createNotification({\n        type: 'save',\n        notice: todo\n      });\n    } else {\n      alert('Insert a task');\n    }\n  };\n\n  function loadItems() {\n    setLoading(true);\n    getTodos(savedItems);\n    setLoading(false);\n    setInterval(() => setRealTime(), 1000);\n  }\n\n  function clearItems() {\n    window.localStorage.removeItem('todo');\n    getTodos([]);\n    createNotification({\n      type: 'clear'\n    });\n  }\n\n  function removeTodo(todo) {\n    const items = savedItems.filter(item => item.id !== todo.id);\n    window.localStorage.setItem('todo', JSON.stringify(items));\n    getTodos(items);\n    createNotification({\n      type: 'remove',\n      notice: todo.todo\n    });\n  }\n\n  function taskCompleted(todo) {\n    if (search.trim() === '') {\n      const items = todos.map((item, idx, arr) => {\n        if (item.id === todo.id) {\n          item.completed = 'true';\n        }\n\n        return item;\n      });\n      window.localStorage.setItem('todo', JSON.stringify(items));\n      getTodos(todos);\n    } else {\n      const elItem = savedItems.filter((item, idx, arr) => {\n        if (item.id === todo.id) {\n          item.completed = 'true';\n          return item;\n        }\n      });\n      window.localStorage.setItem('todo', JSON.stringify(savedItems));\n      getTodos(elItem);\n    }\n\n    createNotification({\n      type: 'completed',\n      notice: todo.todo\n    });\n  }\n\n  function setRealTime() {\n    const time = moment().format(\"h:mm:ss a\");\n    setTime(time);\n  }\n\n  function renderSearch(e) {\n    e.preventDefault();\n    const search = e.target.children[0].children[0].value;\n    setSearch(search);\n\n    if (savedItems !== null) {\n      const result = todos.filter((item, idx, arr) => item.todo === search ? item : false); // If there's a match, then render match. If not, then render original list\n\n      result.length > 0 ? getTodos(result) : getTodos(savedItems);\n    }\n  }\n\n  function createNotification(item) {\n    let notification = '';\n    const ele = document.getElementById('notification');\n\n    switch (item.type) {\n      case 'save':\n        notification = `'${item.notice}'  was saved!`;\n        break;\n\n      case 'remove':\n        notification = `'${item.notice}'  was removed!`;\n        break;\n\n      case 'completed':\n        notification = `'${item.notice}'  was completed!`;\n        break;\n\n      case 'clear':\n        notification = 'All list items were cleared!';\n        break;\n\n      default:\n        notification = '';\n    }\n\n    setNotification(notification);\n    const divBox = document.createElement('div');\n    divBox.textContent = notification;\n    divBox.setAttribute('class', 'fade-in');\n    ele.insertBefore(divBox, ele.firstChild);\n    setInterval(() => divBox.setAttribute('class', 'fade-out'), 3000);\n  } //useEffect will load only once when component is mounted\n\n\n  useEffect(() => {\n    loadItems(todos);\n  }, [todo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    active: true,\n    inline: \"centered\",\n    style: {\n      marginTop: '5%;'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"notification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      margin: '0%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, date), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: '0%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, realTime)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"inputForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: todo,\n    onChange: e => setTodo(e.target.value),\n    placeholder: \"Please insert a task...\",\n    style: {\n      width: '70%',\n      marginBottom: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    inverted: true,\n    color: \"blue\",\n    onClick: e => saveTodo(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => renderSearch(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    list: \"search_results\",\n    icon: \"search\",\n    placeholder: \"Search...\",\n    style: {\n      float: 'left',\n      margin: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"search_results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, todos === null || todos.length === 0 ? /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, \"There are no items at this moment.\") : todos.map((item, idx) => /*#__PURE__*/React.createElement(\"option\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 37\n    }\n  }, item.todo)))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"Todo List\"), /*#__PURE__*/React.createElement(Button, {\n    inverted: true,\n    color: \"red\",\n    onClick: () => clearItems(),\n    className: \"clearBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, todos === null || todos.length === 0 ? /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 70\n    }\n  }, \"There are currently no items at the moment.\") : todos.map((item, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onClick: e => taskCompleted(item),\n    checked: item.completed === 'true' ? true : false,\n    toggle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 45\n    }\n  }, \"Completed\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }, item.todo), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 45\n    }\n  }, \"Completed: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 81\n    }\n  }, \" \", item.completed, \" \"), \" \")), /*#__PURE__*/React.createElement(Icon, {\n    name: \"trash\",\n    onClick: e => removeTodo(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  })))))));\n}\n\nexport default TodoEngine;","map":{"version":3,"sources":["/Users/MarcosCanchola/Desktop/web_projects/Mac_Todo/src/components/Todo.js"],"names":["React","useState","useEffect","Button","Checkbox","Icon","Input","Loader","validator","moment","date","format","time","TodoEngine","todo","setTodo","loading","setLoading","realTime","setTime","todos","getTodos","search","setSearch","notification","setNotification","savedItems","JSON","parse","window","localStorage","getItem","saveTodo","e","preventDefault","isAscii","trim","items","id","Math","floor","random","completed","setItem","stringify","createNotification","type","notice","alert","loadItems","setInterval","setRealTime","clearItems","removeItem","removeTodo","filter","item","taskCompleted","map","idx","arr","elItem","renderSearch","target","children","value","result","length","ele","document","getElementById","divBox","createElement","textContent","setAttribute","insertBefore","firstChild","marginTop","margin","width","marginBottom","float"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Button, Checkbox, Icon, Input, Loader} from 'semantic-ui-react';\nimport validator from 'validator';\nimport moment from 'moment'\nimport './Todo.css';\n\nconst date = moment().format(\"MMMM Do YYYY\");\nconst time = moment().format(\"h:mm:ss a\");\n\nfunction TodoEngine(){\n    // Initialize our state variables\n    const [todo, setTodo] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [realTime,setTime] = useState(time);\n    const [todos, getTodos] = useState([]);\n    const [search, setSearch] = useState('');\n    const [notification,setNotification] = useState('');\n\n    const savedItems = JSON.parse(window.localStorage.getItem('todo'));\n\n    // Save todo item\n    const saveTodo = (e)=>{\n        e.preventDefault();\n        // Validate to see if todo isnt an empty task\n        if(validator.isAscii(todo.trim())){\n            let items=[];\n            \n            if(savedItems === null){\n                items = [\n                    {\n                        id:Math.floor(Math.random(99999)*232234),\n                        todo,\n                        completed:'false',\n                        date:date,\n                        time:time\n                    }];\n     \n            }else{\n                items = [\n                        {\n                            id:Math.floor(Math.random(99999)*2342342),\n                            todo,\n                            completed:'false',\n                            date:date,\n                            time:time\n                        },\n                        ...savedItems,\n                    ];      \n            }\n            // Save items\n            window.localStorage.setItem('todo', JSON.stringify(items));   \n            setTodo(\"\");\n            createNotification({type:'save', notice:todo});\n        } \n        else{\n            alert('Insert a task');\n        }\n    }\n\n    function loadItems(){\n        setLoading(true);\n        getTodos(savedItems);\n        setLoading(false);\n        setInterval(()=>setRealTime(),1000);\n    }\n    \n    function clearItems(){\n        window.localStorage.removeItem('todo');\n        getTodos([]);\n        createNotification({type:'clear'});\n    }\n\n    function removeTodo(todo){\n        const items = savedItems.filter(item => item.id !== todo.id );\n\n        window.localStorage.setItem('todo', JSON.stringify(items));\n        getTodos(items);\n        createNotification({type:'remove', notice:todo.todo});\n\n    }\n\n    function taskCompleted(todo){\n       if(search.trim() === ''){\n            const items = todos.map((item,idx,arr) => {\n                if(item.id === todo.id){\n                    item.completed = 'true';\n                }\n                return item\n            });\n            window.localStorage.setItem('todo', JSON.stringify(items));\n            getTodos(todos);              \n       } else{\n            const elItem = savedItems.filter((item,idx,arr) => {\n                if(item.id === todo.id){\n                    item.completed = 'true';\n                    return item\n                }\n            });\n            window.localStorage.setItem('todo', JSON.stringify(savedItems));\n            getTodos(elItem)\n            \n        }\n        createNotification({type:'completed', notice:todo.todo});\n    }\n\n    function setRealTime(){\n        const time = moment().format(\"h:mm:ss a\");\n        setTime(time);\n    }\n\n    function renderSearch(e){\n        e.preventDefault();\n        const search = e.target.children[0].children[0].value;\n        setSearch(search);\n\n        if(savedItems !== null){\n            const result  = todos.filter((item,idx,arr)=> (item.todo === search)? item : false);\n            // If there's a match, then render match. If not, then render original list\n            (result.length > 0) ? getTodos(result) : getTodos(savedItems);\n        }\n\n    }\n\n    function createNotification(item){\n        let notification = '';\n        const ele = document.getElementById('notification');\n\n        switch (item.type){\n            case 'save':\n                notification = `'${item.notice}'  was saved!`;\n                break;\n            case 'remove':\n                notification =`'${item.notice}'  was removed!`;\n                break;\n            case 'completed':\n                notification = `'${item.notice}'  was completed!`;\n                break;\n            case 'clear':\n                notification = 'All list items were cleared!';\n                break;\n            default:\n                notification=''\n                \n        }\n\n        setNotification(notification);\n        const divBox = document.createElement('div');\n        divBox.textContent = notification;\n        divBox.setAttribute('class','fade-in');\n        ele.insertBefore(divBox,ele.firstChild);\n        setInterval(()=> divBox.setAttribute('class','fade-out'),3000)\n    }\n\n    //useEffect will load only once when component is mounted\n    useEffect(()=>{\n        loadItems(todos);\n    },[todo]);\n    \n    return (\n        <div>\n        { (loading) ? <Loader active inline='centered' style={{marginTop:'5%;'}} /> :\n            <div>\n                <div id=\"notification\"></div>\n                <div >\n                    <h3 style={{margin:'0%'}}>{date}</h3>\n                    <h4 style={{margin:'0%'}}>{realTime}</h4>\n                </div>\n                <form className='inputForm'>                \n                    <Input \n                        value={todo}\n                        onChange={(e)=> setTodo(e.target.value)}\n                        placeholder=\"Please insert a task...\"\n                        style={{width:'70%',marginBottom:'1%'}}\n                    />\n                    <Button \n                        inverted color=\"blue\" \n                        onClick={e => saveTodo(e)}>Save</Button>\n                </form>   \n                <div className=\"listContainer\">\n                    <div className=\"listHeader\">\n                    <form onSubmit={e => renderSearch(e)}>\n                        <Input \n                            list=\"search_results\"\n                            icon='search' \n                            placeholder='Search...' \n                            style={{float:'left',margin:'1%'}} \n                            /> \n                        \n                        <datalist id=\"search_results\">\n                            {(todos === null || todos.length === 0)? \n                                <option>There are no items at this moment.</option>\n                                :\n                                todos.map((item,idx)=>\n                                    <option key = {idx}>\n                                        {item.todo}\n                                    </option>                    \n                            \n                            )}\n                        </datalist>                \n                    </form>\n                        <h3>Todo List</h3>\n                        <Button inverted color=\"red\" onClick={()=>clearItems()} className=\"clearBtn\">Clear</Button>  \n                    </div>\n                    \n                    <ul>\n                        {\n                            (todos === null || todos.length === 0) ? <h5>There are currently no items at the moment.</h5>  : \n                                todos.map((item,idx)=>\n                                    <li key={idx} className=\"list\">\n                                        <div>\n                                            <Checkbox \n                                                onClick={(e)=> taskCompleted(item)} \n                                                checked={ (item.completed === 'true' ) ? true: false }\n                                                toggle\n                                                />    \n                                            <p>Completed</p>                                        \n                                        </div>\n\n                                        <p>{item.todo}</p>  \n                                        <div>\n                                            <p className=\"completed\">Completed: <b> {item.completed} </b> </p>\n                                        </div>\n                                        <Icon name='trash' onClick={(e) => removeTodo(item)}/>    \n                                    </li>\n                                ) \n                        }\n                    </ul>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default TodoEngine;"]},"metadata":{},"sourceType":"module"}