{"ast":null,"code":"var _jsxFileName = \"/Users/MarcosCanchola/Desktop/web_projects/todo/src/components/Todo.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction TodoEngine() {\n  // Initialize our state variables\n  const [todo, setTodo] = useState(''); // const [loading, setLoading] = useState(false);\n\n  const [todos, getTodos] = useState([]); // Save todo item\n\n  const saveTodo = e => {\n    e.preventDefault();\n    const savedItems = JSON.parse(window.localStorage.getItem('todo'));\n    let items = [];\n    console.log(savedItems);\n\n    if (savedItems === null) {\n      items = [{\n        id: Math.floor(Math.random(99999 * 332) * 224),\n        todo,\n        completed: false\n      }];\n    } else {\n      items = [...savedItems, {\n        id: Math.floor(Math.random(99999 * 332) * 224),\n        todo,\n        completed: false\n      }];\n    }\n\n    window.localStorage.setItem('todo', JSON.stringify(items));\n    setTodo(\"\");\n  };\n\n  function loadItems() {\n    console.log('loading items...');\n    const items = JSON.parse(window.localStorage.getItem('todo'));\n    console.log(items);\n    getTodos(items);\n  } // useEffect will load only once when component is mounted\n\n\n  useEffect(() => {\n    loadItems();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Mac Todo\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Insert a task...\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: todo,\n    onChange: e => setTodo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => saveTodo(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, todos === null ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 40\n    }\n  }, \"THer are none\") : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, todos.map((item, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, item.todo))))));\n}\n\nexport default TodoEngine;","map":{"version":3,"sources":["/Users/MarcosCanchola/Desktop/web_projects/todo/src/components/Todo.js"],"names":["React","useState","useEffect","TodoEngine","todo","setTodo","todos","getTodos","saveTodo","e","preventDefault","savedItems","JSON","parse","window","localStorage","getItem","items","console","log","id","Math","floor","random","completed","setItem","stringify","loadItems","target","value","map","item","idx"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\n\nfunction TodoEngine(){\n    // Initialize our state variables\n    const [todo, setTodo] = useState('');\n    // const [loading, setLoading] = useState(false);\n    const [todos, getTodos] = useState([])\n\n    // Save todo item\n    const saveTodo = (e)=>{\n        e.preventDefault();\n        const savedItems = JSON.parse(window.localStorage.getItem('todo'));\n        let items=[];\n        console.log(savedItems)\n        \n        if(savedItems === null){\n            items = [\n                {\n                    id:Math.floor(Math.random(99999*332)*224),\n                    todo,\n                    completed:false\n                }];\n        }else{\n            items = [\n                    ...savedItems,\n                    {\n                        id:Math.floor(Math.random(99999*332)*224),\n                        todo,\n                        completed:false\n                    }];            \n        }\n\n\n        window.localStorage.setItem('todo', JSON.stringify(items));\n        setTodo(\"\")\n\n    }\n    function loadItems(){\n        console.log('loading items...');\n        const items = JSON.parse(window.localStorage.getItem('todo'));\n        console.log(items)\n        getTodos(items)\n    }\n    \n\n    // useEffect will load only once when component is mounted\n    useEffect(()=>{\n        loadItems()\n    })\n    \n    return (\n        <div>\n            <h2>Mac Todo</h2>\n            <form>\n                <h3>Insert a task...</h3>\n                <input \n                    value={todo}\n                    onChange={(e)=> setTodo(e.target.value)}\n                />\n                <button onClick={e => saveTodo(e)}>Save</button>\n            </form>\n            <hr />\n            <ul>\n                {\n                    (todos === null) ? <h2>THer are none</h2>  : \n                        <ul>\n                        {todos.map((item,idx)=>\n                            <div key={idx}>\n                                <p>{item.todo}</p>        \n                            </div>\n                        )} \n                    </ul>\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default TodoEngine;"]},"metadata":{},"sourceType":"module"}